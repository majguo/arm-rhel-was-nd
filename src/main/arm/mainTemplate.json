{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "ibmUserId": {
            "type": "string",
            "metadata": {
                "description": "Username of your IBM ID account."
            }
        },
        "ibmUserPwd": {
            "type": "securestring",
            "metadata": {
                "description": "Password of your IBM ID account."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "The size of virtual machine to provision."
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "metadata": {
                "description": "The string to prepend to the DNS label."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "authenticationType": {
            "type": "string",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "wasUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for WebSphere admin."
            }
        },
        "wasPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for WebSphere admin."
            }
        },
        "guidValue": {
            "defaultValue": "[newGuid()]",
            "type": "string"
        }
    },
    "variables": {
        "const_addressPrefix": "10.0.0.0/16",
        "const_arguments": "[concat(' ',parameters('wasUsername'),' ',parameters('wasPassword'))]",
        "const_dnsLabelPrefix": "[concat(parameters('dnsLabelPrefix'), take(replace(parameters('guidValue'),'-',''),6))]",
        "const_linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        },
        "const_scriptLocation": "[uri(parameters('_artifactsLocation'), 'scripts/')]",
        "const_subnetAddressPrefix": "10.0.1.0/24",
        "const_subnetName": "subnet01",
        "name_networkInterface": "[concat(variables('const_dnsLabelPrefix'), '-if')]",
        "name_networkSecurityGroup": "[concat(variables('const_dnsLabelPrefix'), '-nsg')]",
        "name_publicIPAddress": "[concat(variables('const_dnsLabelPrefix'), '-ip')]",
        "name_virtualMachine": "[concat(variables('const_dnsLabelPrefix'), '-vm')]",
        "name_virtualNetwork": "[concat(variables('const_dnsLabelPrefix'), '-vnet')]",
        "ref_networkInterface": "[resourceId('Microsoft.Network/networkInterfaces', variables('name_networkInterface'))]",
        "ref_networkSecurityGroup": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('name_networkSecurityGroup'))]",
        "ref_publicIPAddress": "[resourceId('Microsoft.Network/publicIPAddresses', variables('name_publicIPAddress'))]",
        "ref_subnet": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('name_virtualNetwork'), variables('const_subnetName'))]",
        "ref_virtualMachine": "[resourceId('Microsoft.Compute/virtualMachines', variables('name_virtualMachine'))]",
        "ref_virtualNetwork": "[resourceId('Microsoft.Network/virtualNetworks', variables('name_virtualNetwork'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "${customer.usage.attribution.id}",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "${singleserver.start}",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "${azure.apiVersion}",
            "name": "[variables('name_networkSecurityGroup')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "TCP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "destinationPortRanges": [
                                "9060",
                                "9080",
                                "9043",
                                "9443"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "${azure.apiVersion}",
            "name": "[variables('name_virtualNetwork')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('ref_networkSecurityGroup')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('const_addressPrefix')]"
                    ]
                },
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "${azure.apiVersion}",
            "name": "[concat(variables('name_virtualNetwork'), '/', variables('const_subnetName'))]",
            "dependsOn": [
                "[variables('ref_virtualNetwork')]",
                "[variables('ref_networkSecurityGroup')]"
            ],
            "properties": {
                "addressPrefix": "[variables('const_subnetAddressPrefix')]",
                "networkSecurityGroup": {
                    "id": "[variables('ref_networkSecurityGroup')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "${azure.apiVersion}",
            "name": "[variables('name_publicIPAddress')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[concat(toLower(variables('const_dnsLabelPrefix')))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "${azure.apiVersion}",
            "name": "[variables('name_networkInterface')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('ref_publicIPAddress')]",
                "[variables('ref_subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[variables('ref_publicIPAddress')]"
                            },
                            "subnet": {
                                "id": "[variables('ref_subnet')]"
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "internalDnsNameLabel": "[variables('name_virtualMachine')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "${azure.apiVersion}",
            "name": "[variables('name_virtualMachine')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('ref_networkInterface')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "${image.publisher}",
                        "offer": "${twas.image.offer}",
                        "sku": "${twas.image.sku}",
                        "version": "${twas.image.version}"
                    },
                    "osDisk": {
                        "name": "[concat(variables('name_virtualMachine'), '-disk')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    }
                },
                "osProfile": {
                    "computerName": "[variables('name_virtualMachine')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('const_linuxConfiguration'))]",
                    "customData": "[base64(concat(parameters('ibmUserId'), ' ', parameters('ibmUserPwd')))]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[variables('ref_networkInterface')]"
                        }
                    ]
                }
            },
            "plan": {
                "name": "${twas.image.sku}",
                "publisher": "${image.publisher}",
                "product": "${twas.image.offer}"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "singleServerVMCreated",
            "dependsOn": [
                "[variables('ref_virtualMachine')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "${azure.apiVersion}",
            "name": "[concat(variables('name_virtualMachine'), '/install')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('ref_virtualMachine')]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "settings": {
                    "fileUris": [
                        "[uri(variables('const_scriptLocation'), concat('install.sh', parameters('_artifactsLocationSasToken')))]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('sh install.sh', variables('const_arguments'))]"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "${azure.apiVersion}",
            "name": "${singleserver.end}",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('name_virtualMachine'), 'install')]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        }
    ],
    "outputs": {
        "adminSecuredConsole": {
            "type": "string",
            "value": "[concat('https://',reference(variables('name_publicIPAddress')).dnsSettings.fqdn,':9043/ibm/console')]"
        },
        "snoopServletUrl": {
            "type": "string",
            "value": "[concat('https://',reference(variables('name_publicIPAddress')).dnsSettings.fqdn,':9443/snoop')]"
        },
        "hitCountServletUrl": {
            "type": "string",
            "value": "[concat('https://',reference(variables('name_publicIPAddress')).dnsSettings.fqdn,':9443/hitcount')]"
        }
    }
}