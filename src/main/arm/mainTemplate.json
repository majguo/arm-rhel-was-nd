{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "dnsLabelPrefix": {
            "type": "string"
        },
        "vmSize": {
            "defaultValue": "Standard_D2_v3",
            "type": "string"
        },
        "osDiskType": {
            "defaultValue": "StandardSSD_LRS",
            "type": "string"
        },
        "addressPrefix": {
            "defaultValue": "10.0.0.0/16",
            "type": "string"
        },
        "subnetName": {
            "defaultValue": "subnet01",
            "type": "string"
        },
        "subnetAddressPrefix": {
            "defaultValue": "10.0.1.0/24",
            "type": "string"
        },
        "vmAdminId": {
            "type": "string"
        },
        "vmAdminPwd": {
            "type": "securestring"
        },
        "adminUser": {
            "type": "string"
        },
        "adminPwd": {
            "type": "securestring"
        },
        "connectToDB2Server": {
            "defaultValue": false,
            "type": "bool"
        },
        "db2ServerName": {
            "defaultValue": "",
            "type": "string"
        },
        "db2ServerPortNumber": {
            "defaultValue": "",
            "type": "string"
        },
        "db2DBName": {
            "defaultValue": "",
            "type": "string"
        },
        "db2DBUserName": {
            "defaultValue": "",
            "type": "string"
        },
        "db2DBUserPwd": {
            "defaultValue": "",
            "type": "securestring"
        },
        "db2DSJndiName": {
            "defaultValue": "",
            "type": "string"
        },
        "connectToELK": {
            "defaultValue": false,
            "type": "bool"
        },
        "logStashServerName": {
            "defaultValue": "",
            "type": "string"
        },
        "logStashServerPortNumber": {
            "defaultValue": "",
            "type": "string"
        },
        "guidValue": {
            "defaultValue": "[newGuid()]",
            "type": "string"
        }
    },
    "variables": {
        "virtualMachineName": "[concat('wasVM', take(replace(parameters('guidValue'),'-',''),6))]",
        "dnsLabelPrefix": "[concat(parameters('dnsLabelPrefix'), take(replace(parameters('guidValue'),'-',''),6))]",
        "virtualNetworkName": "[concat(variables('dnsLabelPrefix'), '-vnet')]",
        "networkSecurityGroupName": "[concat(variables('dnsLabelPrefix'), '-nsg')]",
        "networkInterfaceName": "[concat(variables('virtualMachineName'), '-if')]",
        "publicIPAddressName": "[concat(variables('virtualMachineName'), '-ip')]",
        "diskName": "[concat(variables('virtualMachineName'), '-disk')]",
        "publicIPAddressRef": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), parameters('subnetName'))]",
        "networkSecurityGroupRef": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "networkInterfaceRef": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]",
        "virtualNetworkRef": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "virtualMachineRef": "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]",
        "scriptLocation": "[uri(parameters('_artifactsLocation'), 'scripts/')]",
        "arguments1": "[concat(' -m ',parameters('adminUser'),' -c ',parameters('adminPwd'))]",
        "arguments2": "[if(parameters('connectToDB2Server'),concat(' -n \"',parameters('db2ServerName'),'\" -t ',parameters('db2ServerPortNumber'),' -d ',parameters('db2DBName'),' -i ',parameters('db2DBUserName'),' -s ',parameters('db2DBUserPwd'),' -j ',parameters('db2DSJndiName')),' -n  -t  -d  -i  -s  -j ')]",
        "arguments3": "[if(parameters('connectToELK'),concat(' -g \"',parameters('logStashServerName'),'\" -o ',parameters('logStashServerPortNumber')),' -g  -o ')]"
    },
    "resources": [
        {
            "apiVersion": "2019-09-01",
            "name": "${tracking.pid}",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-06-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "TCP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound",
                            "destinationPortRanges": [
                                "22",
                                "9043",
                                "9060",
                                "9080",
                                "9443"
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-06-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('networkSecurityGroupRef')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('virtualNetworkName'), '/', parameters('subnetName'))]",
            "dependsOn": [
                "[variables('virtualNetworkRef')]",
                "[variables('networkSecurityGroupRef')]"
            ],
            "properties": {
                "addressPrefix": "[parameters('subnetAddressPrefix')]",
                "networkSecurityGroup": {
                    "id": "[variables('networkSecurityGroupRef')]"
                }
            }
        },                
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-06-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('dnsLabelPrefix')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-06-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('publicIPAddressRef')]",
                "[variables('subnetRef')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[variables('publicIPAddressRef')]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "primary": true
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('virtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('networkInterfaceRef')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoft_javaeeonazure_test",
                        "offer": "rhel74-was-jdk-preview",
                        "sku": "905",
                        "version": "9.0.5"
                    },
                    "osDisk": {
                        "name": "[variables('diskName')]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    }
                },
                "osProfile": {
                    "computerName": "[variables('virtualMachineName')]",
                    "adminUsername": "[parameters('vmAdminId')]",
                    "adminPassword": "[parameters('vmAdminPwd')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[variables('networkInterfaceRef')]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-03-01",
            "name": "[concat(variables('virtualMachineName'), '/CustomScript')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('virtualMachineRef')]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "settings": {
                    "fileUris": [
                        "[uri(variables('scriptLocation'), concat('install.sh', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('create-ds.sh', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('create-ds.py', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('enable-hpel.sh', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('enable-hpel.py', parameters('_artifactsLocationSasToken')))]",
                        "[uri(variables('scriptLocation'), concat('setup-filebeat.sh', parameters('_artifactsLocationSasToken')))]"
                    ],
                    "commandToExecute": "[concat('sh install.sh', variables('arguments1'), variables('arguments2'), variables('arguments3'))]"
                }
            }
        }
    ],
    "outputs": {
        "adminSecuredConsole": {
            "type": "string",
            "value": "[concat('https://',reference(variables('publicIPAddressName')).dnsSettings.fqdn,':9043/ibm/console')]"
        }
    }
}